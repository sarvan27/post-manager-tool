{"version":3,"file":"static/js/121.0168f325.chunk.js","mappings":"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","sources":["components/posts/PostSearch.jsx","components/posts/PostCardItem.jsx","components/posts/AddOrEditPost.jsx","hooks/useDebounce.jsx","components/posts/DeletePostFeedback.jsx","pages/Posts/index.jsx"],"sourcesContent":["import { TextField, Autocomplete, createFilterOptions, InputAdornment } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { Search } from '@mui/icons-material';\nimport { selectPost } from '../../redux/actions';\n\nconst filter = createFilterOptions();\n\nconst PostSearch = () => {\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(null);\n  const allPosts = useSelector((state) => state.postReducer.allPosts);\n\n  const handleSelect = (value) => {\n    if (value?.id || value === null) setValue(value);\n    dispatch(selectPost(value));\n  };\n\n  return (\n    <div style={{ minHeight: 64 }}>\n      <Autocomplete\n        value={value}\n        onChange={(_, newValue) => handleSelect(newValue)}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          const { inputValue } = params;\n          // Suggest the creation of a new value\n          const isExisting = options?.some((option) => inputValue === option.title);\n          if (inputValue !== '' && !isExisting) {\n            filtered.push({\n              inputValue,\n              title: `Add \"${inputValue}\"`\n            });\n          }\n\n          return filtered;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        id=\"posts-search-autocomplete-create\"\n        options={allPosts ? allPosts : []}\n        getOptionLabel={(option) => option?.title || ''}\n        renderOption={(props, option) => <li {...props}>{option.title}</li>}\n        sx={{ width: 300, float: 'right' }}\n        freeSolo\n        margin=\"dense\"\n        size=\"small\"\n        renderInput={(params) => (\n          <TextField\n            margin=\"dense\"\n            size=\"small\"\n            InputProps={{\n              ...params.InputProps,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n            {...params}\n            placeholder=\"Search for title\"\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default PostSearch;\n","import { Delete, Edit } from '@mui/icons-material';\nimport {\n  Avatar,\n  Typography,\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { number, string } from 'prop-types';\nimport { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setDeletePost, setEditPost } from '../../redux/actions';\n\nconst PostCardItem = ({ userId, id, title, body }) => {\n  const dispatch = useDispatch();\n\n  const handleEdit = () => {\n    dispatch(setEditPost({ userId, id, title, body }));\n  };\n\n  const handleDelete = () => {\n    dispatch(setDeletePost({ userId, id, title, body }));\n  };\n\n  return (\n    <Card id={`post-item-${id}`} sx={{ marginBottom: 2 }}>\n      <CardHeader\n        avatar={\n          <Avatar\n            sx={{ width: 32, height: 32, fontSize: 14, bgcolor: blue[700] }}\n            aria-label=\"user-id\">\n            {userId}\n          </Avatar>\n        }\n        action={\n          <>\n            <Tooltip title=\"Edit post\" placement=\"top\">\n              <IconButton aria-label=\"edit\" size=\"medium\" color=\"primary\" onClick={handleEdit}>\n                <Edit />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete post\" placement=\"top\">\n              <IconButton aria-label=\"edit\" size=\"medium\" color=\"error\" onClick={handleDelete}>\n                <Delete />\n              </IconButton>\n            </Tooltip>\n          </>\n        }\n        title={\n          <Typography variant=\"h6\" component=\"div\">\n            {title}\n          </Typography>\n        }\n      />\n      <CardContent sx={{ paddingTop: 0 }}>\n        <Typography>{body}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nPostCardItem.propTypes = {\n  userId: number.isRequired,\n  id: number.isRequired,\n  title: string.isRequired,\n  body: string.isRequired\n};\n\nexport default memo(PostCardItem);\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  LinearProgress\n} from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport {\n  createNewPost,\n  resetAddPost,\n  resetEditPost,\n  searchForPreEditPost,\n  setPreEditPost,\n  updatePost\n} from '../../redux/actions';\nimport { Search } from '@mui/icons-material';\nimport { useDebounce } from '../../hooks/useDebounce';\n\nconst AddOrEditPost = () => {\n  const dispatch = useDispatch();\n\n  const [search, setSearch] = useState('');\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  const [data, setData] = useState({});\n\n  const preEditPost = useSelector((state) => state.postReducer.preEditPost);\n  const addNew = useSelector((state) => state.postReducer.addNewPost);\n  const editPost = useSelector((state) => state.postReducer.editPost);\n\n  useEffect(() => {\n    setSearch('');\n  }, [preEditPost]);\n\n  useEffect(() => {\n    setData({ ...addNew, userId: '', body: '' });\n  }, [addNew]);\n\n  useEffect(() => {\n    setData(editPost);\n  }, [editPost]);\n\n  const handleDataChange = useCallback((key, value) => {\n    let temp = { ...data };\n    temp[key] = value;\n    setData(temp);\n  });\n\n  const handleClose = () => {\n    if (preEditPost) {\n      dispatch(setPreEditPost(false));\n    }\n    if (data.id) {\n      dispatch(resetEditPost());\n    }\n    if (typeof addNew === 'object' && 'title' in addNew) {\n      dispatch(resetAddPost());\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (data.id) {\n      dispatch(updatePost(data));\n    } else {\n      dispatch(createNewPost(data));\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchLoading(true);\n    setSearch(value);\n  };\n\n  const debouncedValue = useDebounce(search, 1000);\n\n  useEffect(() => {\n    setSearchLoading(false);\n    dispatch(searchForPreEditPost(debouncedValue));\n  }, [debouncedValue]);\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth={'sm'}\n      open={Boolean(\n        preEditPost || (typeof addNew === 'object' && 'title' in addNew) || editPost?.id\n      )}\n      onClose={handleClose}>\n      <DialogTitle>\n        {preEditPost\n          ? 'Search title'\n          : editPost?.id\n          ? `Update post - ${editPost?.id}`\n          : 'Create new post'}\n      </DialogTitle>\n      <DialogContent>\n        <form id=\"form-add-or-update-post\" onSubmit={handleSubmit}>\n          {preEditPost ? (\n            <div style={{ position: 'relative' }}>\n              <TextField\n                value={search}\n                onChange={(e) => handleSearch(e.target.value)}\n                InputProps={{\n                  startAdornment: <Search htmlColor=\"gray\" sx={{ marginRight: 1 }} />\n                }}\n                size=\"small\"\n                autoFocus\n                margin=\"dense\"\n                placeholder=\"Search for exact title to edit\"\n                type=\"text\"\n                fullWidth\n                required\n              />\n              <LinearProgress\n                sx={{\n                  position: 'absolute',\n                  bottom: '4px',\n                  right: '2px',\n                  width: '99%',\n                  visibility: searchLoading ? 'visible' : 'hidden'\n                }}\n              />\n            </div>\n          ) : (\n            <>\n              <TextField\n                value={data?.userId ? data.userId : ''}\n                onChange={(e) => handleDataChange('userId', e.target.value)}\n                InputProps={{\n                  inputProps: { min: 1 }\n                }}\n                size=\"small\"\n                autoFocus\n                margin=\"dense\"\n                label=\"User ID\"\n                type=\"number\"\n                fullWidth\n                required\n              />\n              <TextField\n                value={data?.title ? data.title : ''}\n                onChange={(e) => handleDataChange('title', e.target.value)}\n                size=\"small\"\n                margin=\"normal\"\n                label=\"Title\"\n                type=\"text\"\n                fullWidth\n                multiline\n                required\n              />\n              <TextField\n                value={data?.body ? data.body : ''}\n                onChange={(e) => handleDataChange('body', e.target.value)}\n                margin=\"normal\"\n                size=\"small\"\n                label=\"Body\"\n                type=\"text\"\n                fullWidth\n                multiline\n                rows={4}\n                required\n              />\n            </>\n          )}\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        {!preEditPost && (\n          <Button type=\"submit\" form=\"form-add-or-update-post\" color=\"primary\" variant=\"contained\">\n            {editPost?.id ? 'Update' : 'Create'}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddOrEditPost;\n","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport { useDebounce };\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { removePost, resetDeletePost } from '../../redux/actions';\n\nconst DeletePostFeedback = () => {\n  const dispatch = useDispatch();\n\n  const [feedback, setFeedback] = useState('');\n\n  const deletePost = useSelector((state) => state.postReducer.deletePost);\n\n  useEffect(() => {\n    setFeedback('');\n  }, [deletePost]);\n\n  const handleClose = () => {\n    dispatch(resetDeletePost());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(removePost(feedback, deletePost.id));\n  };\n\n  return (\n    <Dialog fullWidth maxWidth={'sm'} open={Boolean(deletePost?.id)} onClose={handleClose}>\n      <DialogTitle>Are you sure you want to delete the below post ?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <strong>User ID:</strong>&nbsp;\n          {deletePost?.userId}\n          <br />\n          <strong>Title:</strong>&nbsp;{deletePost?.title}\n          <br />\n          <strong>Body:</strong>&nbsp;{deletePost?.body}\n        </DialogContentText>\n        <form id=\"form-delete-post\" onSubmit={handleSubmit}>\n          <TextField\n            value={feedback}\n            onChange={(e) => setFeedback(e.target.value)}\n            margin=\"normal\"\n            size=\"small\"\n            label=\"Feedback\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={4}\n            required\n            helperText=\"Please provide valuable feedback to delete this post!\"\n          />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button type=\"submit\" form=\"form-delete-post\" color=\"primary\" variant=\"contained\">\n          {'Delete'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeletePostFeedback;\n","import { Container, Skeleton } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../../redux/actions';\nimport { useEffect } from 'react';\nimport PostSearch from '../../components/posts/PostSearch';\nimport PostCardItem from '../../components/posts/PostCardItem';\nimport AddOrEditPost from '../../components/posts/AddOrEditPost';\nimport DeletePostFeedback from '../../components/posts/DeletePostFeedback';\n\nfunction Posts() {\n  const dispatch = useDispatch();\n  const postLoading = useSelector((state) => state.postReducer.allPostsLoading);\n  const viewablePosts = useSelector((state) => state.postReducer.viewablePosts);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  return (\n    <Container maxWidth=\"md\" style={{ marginTop: 64 }}>\n      {postLoading ? (\n        <>\n          {Array(10)\n            .fill(0)\n            .map((_, index) => (\n              <Skeleton key={index} height={66} width={'100%'} />\n            ))}\n        </>\n      ) : (\n        <>\n          <PostSearch />\n          <div>\n            {viewablePosts?.length > 0 &&\n              viewablePosts.map((obj, index) => <PostCardItem key={index} {...obj} />)}\n          </div>\n          <AddOrEditPost />\n          <DeletePostFeedback />\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Posts;\n"],"names":["filter","createFilterOptions","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","value","setValue","allPosts","useSelector","state","postReducer","_jsx","style","minHeight","children","Autocomplete","onChange","_","newValue","id","selectPost","handleSelect","filterOptions","options","params","filtered","inputValue","isExisting","some","option","title","push","concat","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","props","_objectSpread","sx","width","float","freeSolo","margin","size","renderInput","TextField","InputProps","startAdornment","InputAdornment","position","Search","placeholder","PostCardItem","_ref","userId","body","_jsxs","Card","marginBottom","CardHeader","avatar","Avatar","height","fontSize","bgcolor","blue","action","_Fragment","Tooltip","placement","IconButton","color","onClick","setEditPost","Edit","setDeletePost","Delete","Typography","variant","component","CardContent","paddingTop","memo","search","setSearch","_useState3","_useState4","searchLoading","setSearchLoading","_useState5","_useState6","data","setData","preEditPost","addNew","addNewPost","editPost","useEffect","handleDataChange","useCallback","key","temp","handleClose","setPreEditPost","resetEditPost","resetAddPost","debouncedValue","delay","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","searchForPreEditPost","Dialog","fullWidth","maxWidth","open","Boolean","onClose","DialogTitle","DialogContent","onSubmit","e","preventDefault","updatePost","createNewPost","target","htmlColor","marginRight","autoFocus","type","required","LinearProgress","bottom","right","visibility","inputProps","min","label","multiline","rows","DialogActions","Button","form","feedback","setFeedback","deletePost","resetDeletePost","DialogContentText","removePost","helperText","postLoading","allPostsLoading","viewablePosts","fetchPosts","Container","marginTop","Array","fill","map","index","Skeleton","PostSearch","length","obj","AddOrEditPost","DeletePostFeedback"],"sourceRoot":""}